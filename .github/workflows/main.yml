姓名:androidBuild

#控制操作何时运行。
在……之上:
  #触发推式或拉式请求事件的工作流，但仅限于主体分支
推:
分支机构:[主要的]
pull_request:
分支机构:[主要的]

  #允许您从“操作”选项卡手动运行此工作流
workflow_dispatch:

#工作流运行由一个或多个作业组成，这些作业可以按顺序或并行运行
工作:
  #此工作流包含一个名为“生成”的作业
buildAndroid:
姓名:buildAndroid
run-on:ubuntu-最新
步骤:
-姓名:结帐
uses:操作/结帐@main

-姓名:安装Android NDK
uses:nttld/setup-ndk@main
身份标识:setup-ndk
和……一起:
ndk-版本:r21e

-姓名:安装Java JDK
uses:操作/设置-java@main
和……一起:
分布:'祖鲁'
java版:'17'

-姓名:设置Haxe
uses:krdlab/setup-haxe@master
和……一起:
haxe-版本:4.3.6

-姓名:还原以前的缓存
身份标识:cache-debug-build-android-restore
uses:操作/缓存/恢复@main
和……一起:
路径:|
~/Haxelib
~/.gradle
导出/发布/android/haxe
导出/发布/android/obj
钥匙:cache-android-build

-姓名:安装Haxelib
跑:|
Haxelib设置~/Haxelib
Haxelib安装hxcpp4.2.1>/dev/null
Haxelib安装石灰7.9.0
Haxelib安装openfl
Haxelib--不得安装flixel5.2.2
Haxelib运行时间设置flixel
Haxelib安装flixel-tools1.5.1
Haxelib安装flixel-ui
Haxelib安装flixel-addons3.0.2
Haxelib安装TJSON
Haxelib安装hxjsonast
Haxelib安装SScript
          haxelib git hxCodec https://github.com/SPLCoding/hxCodec-but-it-works-xd.git
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git linc_luajit https://github.com/Sirox228/linc_luajit
          haxelib git extension-androidtools https://github.com/MaysLastPlay77/extension-androidtools
          haxelib install hxcpp-debug-server
          haxelib git androiddialogs https://github.com/beihu235/AndroidDialogs
          haxelib git devicelanguage https://github.com/beihu235/devicelanguage
          haxelib list

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Configure Android
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
          haxelib set lime 7.9.0
          haxelib set flixel 5.2.2
          haxelib set flixel-addons 3.0.2
          haxelib set hxcpp 4.2.1
          haxelib list
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Building
        run: haxelib run lime build android -${{ matrix.arch }}
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-android-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }

      - name: Save Current Cache
        id: cache-release-build-android-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/debug
        
